no_operation:
  doc: Does nothing

debug_print_eax:
  doc: Dumps the EAX register
  in:
    eax: Register to dump

terminate_process:
  doc: Makes the CPU sleep
  in:
    eax: Status code

read:
  in:
    esi: Stream descriptor
    eax: Bytes to read
    edi: Buffer
  out:
    edi: Filled buffer
    eax: Bytes read 

write:
  in:
    edi: Stream descriptor
    eax: Bytes to write
    esi: Buffer
  out:
    eax: Bytes extended

seek:
  in:
    esi: Stream descriptor
    eax: New position in stream descriptor
  out:

close:
  in:
    esi: Stream descriptor

open_filesystem_file:
  in:
    esi: File path
  out:
    edi: Stream descriptor

execute:
  doc: Copies the whole stream descriptor to memory, then replaces the process with it.
  in: 
    esi: Stream descriptor

fork_and_execute:
  doc: Copies the whole stream descriptor to memory, then creates a new process from it.
  in: 
    esi: Stream descriptor
  out:
    eax: New PID

fork_process:
  doc: Forks another process from the current process. Processes don't share code, data or stack
  out:
    eax: New thread ID if it's the new process, else 0

fork_thread:
  doc: Forks another thread from the current thread. Threads share code and data, but not stack.
  out:
    eax: New thread ID if it's the new thread, else 0

set_stream_interactions:
  in:
    eax: Stream descriptor
    ecx: Bitmask specifying where the interactions to accept are set and the interactions to reject are cleared

get_stream_interactions:
  in:
    eax: Stream descriptor
  out:
    eax: Interaction bitmask set by the peer

wait_for_interaction:
  doc: Waits for the peer to set or clear flags, then sets the values at "edi" to the result of the interactions
  in:
    eax: Stream descriptor
    ecx: Bitmask specifying the necessary interactions
    edx: Bitmask specifying which of those interactions need to be cleared or set
    